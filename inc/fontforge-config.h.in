#ifndef _FF_CONFIG_H
#define _FF_CONFIG_H

#mesondefine HAVE_PTHREAD_H

#mesondefine FONTFORGE_CAN_USE_GDK

#mesondefine X_DISPLAY_MISSING

#mesondefine FONTFORGE_CONFIG_USE_DOUBLE

#mesondefine _LIBSPIRO_FUN

//#mesondefine _NO_LIBUNICODENAMES 1

//#mesondefine _NO_PYTHON 1

/* Define if disabling feature 'native-scripting'. */
// #define _NO_FFSCRIPT 1

#define HAVE_LIBINTL_H 1

/* Define if not using giflib */
#define _NO_GIFLIB 1

/* Define if not using cairo */
//#define _NO_LIBCAIRO 1

/* Define if not using libjpeg */
#define _NO_LIBJPEG 1

/* Define if not using libpng */
#define _NO_LIBPNG 1

/* Define if not using libreadline */
#define _NO_LIBREADLINE 1

/* Define if not using libspiro */
#mesondefine _NO_LIBSPIRO

/* Define if not using libtiff */
#define _NO_LIBTIFF 1

/* Define if not using giflib or libungif.) */
#define _NO_LIBUNGIF 1

/* Define if not using libunicodenames */
#define _NO_LIBUNICODENAMES 1

/* Define if not using libuninameslist */
#define _NO_LIBUNINAMESLIST 1

/* Define if not using libzmq. */
#define _NO_LIBZMQ 1

/* Define if not using mmap. */
#define _NO_MMAP 1

/* Define if not using Python. */
#define _NO_PYTHON 1

/* Define if not using tzset. */
//#define _NO_TZSET 1

/* Define if not using xinput. */
#define _NO_XINPUT 1

/* Define if not using xkb. */
#define _NO_XKB 1

#define HAVE_ICONV_H 1
#define ICONV_CONST 

/* "YYYYMMDD as number when configure was run" */
#define FONTFORGE_VERSIONDATE "20190307"

/* "YYYYMMDD as number when configure was run (no quotes)" */
#define FONTFORGE_VERSIONDATE_RAW 20190307

/* FontForge Major Version */
#define FONTFORGE_VERSION_MAJOR 2

/* FontForge Minor Version */
#define FONTFORGE_VERSION_MINOR 0

/* "Epoch time that configure was run at" */
#define FONTFORGE_MODTIME "1551951475L"

/* "Epoch time that configure was run at (no quotes)" */
#define FONTFORGE_MODTIME_RAW 1551951475L

#define FONTFORGE_MODTIME_STR "09:37 UTC  7-Mar-2019"

#define FONTFORGE_GIT_VERSION "bd9a9cfcfcb85e1703e5e2ecc76b91a46e71b6fc"

#define SHAREDIR "share" // wtf

/* Apple suggests using a sfnt version of 'true' for fonts designed for use   */
/*  only on a mac (windows refuses such fonts). I generally prefer to have a  */
/*  font work everywhere, so normally ff produces fonts with version 1.0      */
/*  Set this if you want Apple only fonts (produced when Apple mode is set and*/
/*  Opentype mode is unset in the Generate Fonts-Options dialog).          */
#mesondefine FONTFORGE_CONFIG_APPLE_ONLY_TTF

/* Nobody else puts apple unicode encodings into the name table. So I probably*/
/*  shouldn't either.  But if someone wants them...                  */
#mesondefine FONTFORGE_CONFIG_APPLE_UNICODE_NAMES

/* I used to use an approximation method when converting cubic to quadratic   */
/*  splines which was non-symmetric. In some cases it produced better results */
/*  than the current approach. This flag restores the old algorithm.          */
#mesondefine FONTFORGE_CONFIG_NON_SYMMETRIC_QUADRATIC_CONVERSION

/* Prior to late Sept of 2003 FontForge converted certain mac feature/settings*/
/*  into opentype-like tags. Some features could be converted directly but for*/
/*  a few I made up tags.  Now FontForge is capable of using the mac feature  */
/*  settings directly. If you set this flag then when FontForge loads in an sfd*/
/*  file with these non-standard opentype tags, it will convert them into the */
/*  appropriate mac feature/setting combinations.                             */
#mesondefine FONTFORGE_CONFIG_CVT_OLD_MAC_FEATURES

/* In addition to placing snippets of charstrings into subrs, I tried adding  */
/*  whole glyphs (when that was possible). To my surprise, it made things     */
/*  worse in one of my test cases, and barely registered an improvement in    */
/*  another.   So I think we're better off without it. But I don't understand */
/*  why things are worse so I'm leaving the code in to play with              */
#mesondefine FONTFORGE_CONFIG_PS_REFS_GET_SUBRS


#endif /* _FF_CONFIG_H */
